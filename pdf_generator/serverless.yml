service: demo
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:ListBucket
        - s3:ListBucketVersions
      Resource:
        - 'arn:aws:s3:::${param:bucket_name}'
        - 'arn:aws:s3:::${param:bucket_name}/*'
  environment:
   
    BUCKET_NAME: ${param:bucket_name}

params:
  test:
    bucket_name: demo-${sls:stage}-download-bird
  dev:
    bucket_name: demo-${sls:stage}-download-bird
  ExistingS3Bucket:
     Default: demo-dev-download-bird
     Description: Name of an existing S3 Bucket 
     Type: AWS::S3::ExistingS3Bucket


package:
  exclude:
    - ./**
  include:
    - node_modules/**
    - headless-chrome/**
    - handler.js

functions:
  pdf:
    name: demo-${sls:stage}-bird
    description: Lambda function to generate the file
    memorySize: 1024
    timeout: 60
    handler: handler.pdf
    events:
      - httpApi:
          path: /pdf
          method: post
          
plugins:
  - serverless-offline

resources:
  Conditions: 
    UploadBucket: 
      Fn::Equals: [ Ref: AWS::S3, "demo-dev-download-bird" ]
  
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
          Condition: !If
            - UploadBucket 
            - !Ref AWS::S3
            - BucketName: ${param:bucket_name}
                VersioningConfiguration:
                Status: Enabled
                CorsConfiguration:
                  CorsRules:
                   - AllowedHeaders: ['*']
                     AllowedMethods: [GET, PUT]
                     AllowedOrigins: ['*']
                     Id: PDFGenerationCORSRuleId
                     MaxAge: '3600'
